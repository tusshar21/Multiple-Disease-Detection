# -*- coding: utf-8 -*-
"""Heart Disease Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CPgtmGHeBHoLK9B2RaDr5owX0C97C40u
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data collection and processing"""

heart_data= pd.read_csv('/content/heart_statlog_cleveland_hungary_final.csv')

heart_data.info()

X = heart_data.drop(columns='target',axis=1)
Y = heart_data['target']

print(X)

print(Y)

"""Splitting data into training and test data

"""

X_train , X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=10)

"""Model Training"""

model=LogisticRegression()

#training logiustic regression model with training data
model.fit(X_train,Y_train)

"""Model Evaluation"""

X_train_prediction=model.predict(X_train)
training_data_accuracy=accuracy_score(X_train_prediction,Y_train)

print("Accuracy",training_data_accuracy)

X_test_prediction=model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction,Y_test)

print("accuracy",test_data_accuracy)

"""Building a predictive system"""

input_data=(44,1,0,150,202,0,0,113,1,0,1)
input_data_np=np.asarray(input_data)
#reshaping numpy array bas we are predicting for onlyb for one instance
input_reshaped=input_data_np.reshape(1,-1)
prediction= model.predict(input_reshaped)
print(prediction)

if(prediction==0):
  print("No Heart Disease")
else:
  print("Heart Disease")

import pickle

filename='heart_disease.sav'
pickle.dump(model, open(filename,'wb'))

loaded_model=pickle.load(open('heart_disease.sav','rb'))

