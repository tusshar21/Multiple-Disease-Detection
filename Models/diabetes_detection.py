# -*- coding: utf-8 -*-
"""Diabetes Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12CrPuN8M-RRIf06XXMhMcyynB_8E9u-d
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

"""Data Collection

"""

diabetes_dataset= pd.read_csv('/content/diabetes.csv')

"""Separating Data and target"""

X= diabetes_dataset.drop(columns='Outcome', axis = 1)
Y= diabetes_dataset['Outcome']

"""Data Standardization"""

scaler=StandardScaler()

scaler.fit(X)

standardized_data = scaler.transform(X)

print(standardized_data)

X= standardized_data
Y= diabetes_dataset['Outcome']

print(X)
print(Y)

"""Train Test Split"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify= Y, random_state=2)

"""Training the model"""

classifier=svm.SVC(kernel='linear')

#training the svm classifier
classifier.fit(X_train,Y_train)

"""Model Evaluation"""

X_train_prediction= classifier.predict(X_train)
training_data_accuracy= accuracy_score(X_train_prediction,Y_train)
print(training_data_accuracy)

X_test_prediction= classifier.predict(X_test)
test_data_accuracy= accuracy_score(X_test_prediction,Y_test)
print(test_data_accuracy)

input_data=(1,103,30,38,83,43.3,0.183,33)
input_np= np.asarray(input_data)
input_data_reshaped=input_np.reshape(1,-1)
#standardize input data
std_data= scaler.transform(input_data_reshaped)
print(std_data)

prediction= classifier.predict(std_data)
print(prediction)

import pickle

filename='diabetes_model.sav'
pickle.dump(classifier, open(filename,'wb'))

loaded_model= pickle.load(open('diabetes_model.sav','rb'))

